.table {
  --cell-inline-padding: var(--padding-inline, 8px);

  display: block;
}
.table > * {
  display: contents;
}
.table thead tr {
  border-block-end: calc(var(--border-size-2) * 2) double var(--border-ink);
}
.table tbody tr:nth-child(n+2) {
  border-block-start: var(--border-size-2) solid var(--border-ink);
}
.table tr {
  display: grid;
  grid-template-areas:
    "serial volume   created  price"
    "name   consumed firstTap largeBeer"
    "name   wasted   depleted effectivity";
  grid-template-columns: 1fr 7ch 13ch 13ch;
}
.table :where(th, td) {
  padding-inline: var(--cell-inline-padding);
  text-align: right;
}
.table :where(th, td):nth-child(1) {
  grid-area: serial;
}
.table :where(th, td):nth-child(2) {
  grid-area: name;
}
.table :where(th, td):nth-child(3) {
  grid-area: volume;
}
.table :where(th, td):nth-child(4) {
  grid-area: consumed;
}
.table :where(th, td):nth-child(5) {
  grid-area: wasted;
}
.table :where(th, td):nth-child(6) {
  grid-area: created;
}
.table :where(th, td):nth-child(7) {
  grid-area: firstTap;
}
.table :where(th, td):nth-child(8) {
  grid-area: depleted;
}
.table :where(th, td):nth-child(9) {
  grid-area: price;
}
.table :where(th, td):nth-child(10) {
  grid-area: largeBeer;
}
.table :where(th, td):nth-child(11) {
  grid-area: effectivity;
}

@supports (grid-template-columns: subgrid) {
  .table {
    display: grid;
    grid-template-columns: repeat(4, auto);
  }
  .table tr {
    grid-column: 1 / -1;
    grid-template-columns: subgrid !important;
  }
}

@media screen and (max-width: 33rem) {
  .table {
    grid-template-columns: auto repeat(2, 1fr);
  }
  .table tr {
    grid-template-areas:
      "serial   name     name"
      "volume   created  price"
      "consumed firstTap largeBeer"
      "wasted   depleted effectivity";
    grid-template-columns: 7ch minmax(12ch, 1fr) 12ch;
  }
  /* Hide the top-most table headers, it look ugly and is understandable for sighted user */
  .table thead th:is(:nth-child(1), :nth-child(2)) {
    block-size: 1px;
    clip-path: inset(50%);
    clip: rect(0 0 0 0);
    inline-size: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
  }
  .table.table :is(th, td) {
    text-align: right;
  }
  .table.table :is(th, td):nth-child(2) {
    text-align: left;
  }
}
