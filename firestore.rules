rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /places/{placeID} {
      allow list: if request.auth != null && resource.data.accounts[request.auth.uid] != null;
      // anyone can get to allow search from ShareLink
      allow get: if request.auth != null;
      // anyone can write to allow update from the invitation - TODO: candidate for a cloud function
      allow write: if request.auth != null;
      // Deny all access to the /private subcollection
      match /{subcollection=**} {
        allow read, write: if request.auth != null;
      }
    }
    match /shareLinks/{shareLink=**} {
      // allow "list" b/c we query for existing link in the upsert logic
      allow read, write: if
          request.auth != null;
    }
  }
}